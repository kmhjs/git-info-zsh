function git-colorized-info()
{
    # Check user is in git repository or not
    if ! git-in-repository
    then
      return 1
    fi

    # When in repository, make temp file
    GIT_RELATED_CMDS_SHARED_TMP=$(mktemp)

    local master_distance branch_name status_indicator
    local stash_count untracked_count modified_count added_count deleted_count
    local count_info
    local color_green color_red color_yellow color_clear
    local current_status_color

    # Compute git status information
    master_distance=$(git-commit-diff-current-master-count)
    branch_name=$(git-current-branch-name)

    stash_count=$(git-stash-count)

    count_info=($(git-update-count-base -a -u -d -m))
    current_status=${count_info:#*0}

    # Prepare color
    color_clear="%{${reset_color}%}"
    color_red="%{${fg[red]}%}"
    color_green="%{${fg[green]}%}"
    color_yellow="%{${fg[yellow]}%}"

    # Change repository name color by current status
    current_status_color=${color_green}
    if [[ "${current_status}" =~ '.*(u|m).*' ]]
    then
      current_status_color=${color_yellow}
    fi

    if [[ "${current_status}" =~ '.*a.*' ]]
    then
      current_status_color=${color_red}
    fi

    # Compute status indicator (untracked, added, modified, deleted)
    status_indicator=${current_status//([0-9]| )/}

    # Display branch name
    echo -n "${current_status_color}${branch_name}${color_clear}"

    # Display statuses
    echo -n '('

    ## Show computed status indicator
    echo -n "${color_yellow}${status_indicator}${color_clear}"

    if [[ ${#status_indicator} != 0 ]]
    then
      echo -n '/'
    fi

    ## Display number of stashes
    echo -n 's:'
    if [[ ${stash_count} != 0 ]]
    then
      echo -n ${color_yellow}
    fi

    echo -n ${stash_count}
    echo -n ${color_clear}

    echo -n '/'

    ## Display distance between master and HEAD
    echo -n 'h:'
    if [[ ${master_distance} != 0 ]]
    then
      echo -n ${color_yellow}
    fi

    echo -n ${master_distance}
    echo -n ${color_clear}

    echo ')'

    # Clean up
    rm -f ${GIT_RELATED_CMDS_SHARED_TMP}
}
