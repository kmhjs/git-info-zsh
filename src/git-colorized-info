function git-colorized-info()
{
  #
  # Check user is in git repository or not
  #
  if ! git-in-repository
  then
    return 1
  fi

  #
  # When in repository, make temp file for share the state of git-in-repository
  # validation (validation passed state) between commands
  #
  GIT_RELATED_CMDS_SHARED_TMP=$(mktemp)

  #
  # Prepare color
  #
  local color_clear="%{${reset_color}%}"
  local color_red="%{${fg[red]}%}"
  local color_green="%{${fg[green]}%}"
  local color_yellow="%{${fg[yellow]}%}"

  #
  # Compute git status information
  #
  local count_info=($(git-update-count-base -a -u -d -m))
  local current_status=${count_info:#*0}

  #
  # Construct branch name line
  #

  # Change repository name color by current status
  local current_status_color=${color_green}
  if [[ "${current_status}" =~ '.*(u|m).*' ]]
  then
    current_status_color=${color_yellow}
  fi

  if [[ "${current_status}" =~ '.*a.*' ]]
  then
    current_status_color=${color_red}
  fi

  # Create branch name line
  local branch_name=$(git-current-branch-name)

  local branch_name_line="${current_status_color}${branch_name}${color_clear}"

  #
  # Construct modification status line
  #

  # Compute status indicator (untracked, added, modified, deleted)
  local status_indicator=${current_status//([0-9]| )/}

  ## Show computed status indicator
  local status_indicator_line="${color_yellow}${status_indicator}${color_clear}"

  local status_indicator_separator=''
  if [[ ${#status_indicator} != 0 ]]
  then
    status_indicator_separator='/'
  fi

  #
  # Construct stash count line
  #
  local stash_count=$(git-stash-count)

  local stash_count_color=''
  if [[ ${stash_count} != 0 ]]
  then
    stash_count_color=${color_yellow}
  fi

  local stash_count_line="s:${stash_count_color}${stash_count}${color_clear}"

  #
  # Construct master distance line (distance between master and HEAD)
  #
  local master_distance=$(git-commit-diff-current-master-count)

  local master_distance_color=''
  if [[ ${master_distance} != 0 ]]
  then
    master_distance_color=${color_yellow}
  fi

  local master_distance_line="h:${master_distance_color}${master_distance}${color_clear}"

  #
  # Render
  #
  echo -n "${branch_name_line}(${status_indicator_line}${status_indicator_separator}${stash_count_line}/${master_distance_line})"

  # Clean up
  rm -f ${GIT_RELATED_CMDS_SHARED_TMP}
}
