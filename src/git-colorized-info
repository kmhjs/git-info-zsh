function git-colorized-info()
{
    # Check user is in git repository or not
    git-in-repository; [[ $? != 0 ]] && return -1;

    # When in repository, make temp file
    GIT_RELATED_CMDS_SHARED_TMP=$(mktemp)

    local master_distance branch_name status_indicator
    local stash_count untracked_count modified_count added_count deleted_count
    local count_info
    local color_green color_red color_orange color_clear
    local current_status_color

    # Compute git status information
    master_distance=$(git-commit-diff-current-master-count)
    branch_name=$(git-current-branch-name)

    stash_count=$(git-stash-count)

    count_info=$(git-update-count-base -a -u -d -m)
    current_status=$(echo ${count_info} | grep -o '^.' | tr -d '\n')

    # Prepare color
    color_clear='%{\e[0m%}'
    color_red='%{\e[0;31m%}'
    color_green='%{\e[0;32m%}'
    color_orange='%{\e[0;33m%}'

    # Change repository name color by current status
    current_status_color=${color_green}
    [[ "${current_status}" =~ '.*(u|m).*' ]] && current_status_color=${color_orange}
    [[ "${current_status}" =~ '.*a.*' ]]     && current_status_color=${color_red}

    # Compute status indicator (untracked, added, modified, deleted)
    status_indicator=""
    for s (u a m d); do
        [[ "${current_status}" =~ ".*${s}.*" ]] && status_indicator="${status_indicator}${s}"
    ; done

    # Display branch name
    echo -n "${current_status_color}${branch_name}${color_clear}"

    # Display statuses
    echo -n '('

    ## Show computed status indicator
    echo -n "${color_orange}${status_indicator}${color_clear}"

    [[ ${#status_indicator} != 0 ]] && echo -n '/'

    ## Display number of stashes
    echo -n 's:'
    [[ ${stash_count} != 0 ]] && echo -n ${color_orange}
    echo -n ${stash_count}
    echo -n ${color_clear}

    echo -n '/'

    ## Display distance between master and HEAD
    echo -n 'h:'
    [[ ${master_distance} != 0 ]] && echo -n ${color_orange}
    echo -n ${master_distance}
    echo -n ${color_clear}

    echo ')'

    # Clean up
    rm -f $GIT_RELATED_CMDS_SHARED_TMP
}
