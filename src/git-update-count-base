function git-update-count-base()
{
    local args_options
    local e_opt
    local parse_result

    # Obtain options (Without duplicates)
    typeset -U args_options
    args_options=($(echo $*))

    # Parse result pattern
    local number_only number_of_args
    number_only=0
    [[ ${#${(M)args_options:#*-n*}} != 0 ]] && number_only=1

    # Limit args
    args_options=(${(M)args_options:#*-(a|d|u|m)*})

    # Chcek number of args
    number_of_args=${#args_options}
    [[ ${number_of_args} == 0 ]] && return -1

    # Return result
    git-in-repository; [[ $? == 0 ]] && {
        # Parse `git status --porcelain` result
        local pl_result s t u op

        pl_result=(${(M)$(git status --porcelain):#(A|D|M|\?\?)})
        parse_result=()
        for s t (a A d D m M u \?\?); do
            [[ ${#${(M)args_options:#*-${s}*}} != 0 ]] && parse_result=(${parse_result} "${s}"${#${(M)pl_result:#${t}}})
        ; done
        [[ ${number_only} == 1 && ${number_of_args} == 1 ]] && {
            local oper p_res

            oper=${${args_options}/-/}
            p_res=${(M)parse_result:#${oper}*}
            parse_result=${p_res[2,-1]}
        }
        parse_result=${"${parse_result}"// /\\n}

        # Put result
        echo ${parse_result}

        return 0
    }

    return -1
}
