function git-update-count-base()
{
    local args_options
    local e_opt
    local parse_result

    # Obtain options (Without duplicates)
    typeset -U args_options
    args_options=($(echo $*))

    # Parse result pattern
    local number_only number_of_args
    number_only=0
    if [[ ${#${(M)args_options:#*-n*}} != 0 ]]
    then
      number_only=1
    fi

    # Limit args
    args_options=(${(M)args_options:#*-(a|d|u|m)*})

    # Chcek number of args
    number_of_args=${#args_options}
    if [[ ${number_of_args} == 0 ]]
    then
      return 1
    fi

    # Return result
    if git-in-repository
    then
        # Parse `git status --porcelain` result
        local porcelain_result s t u op

        porcelain_result=(${(M)$(git status --porcelain):#(A|D|M|\?\?)})
        parse_result=()
        for s t (a A d D m M u \?\?)
        do
            if [[ ${#${(M)args_options:#*-${s}*}} != 0 ]]
            then
              parse_result=(${parse_result} "${s}"${#${(M)porcelain_result:#${t}}})
            fi
        done

        if [[ ${number_only} == 1 && ${number_of_args} == 1 ]]
        then
            local oper p_res

            oper=${${args_options}/-/}
            p_res=${(M)parse_result:#${oper}*}
            parse_result=${p_res[2,-1]}
        fi
        parse_result=${"${parse_result}"// /\\n}

        # Put result
        echo ${parse_result}

        return 0
    fi

    return 1
}
